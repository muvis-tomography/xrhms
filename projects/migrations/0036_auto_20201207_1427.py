# Generated by Django 2.2.13 on 2020-12-07 14:27
"""
    Copyright 2023 University of Southampton
    Dr Philip Basford
    Î¼-VIS X-Ray Imaging Centre

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""
from django.db import migrations
from django.core.exceptions import ObjectDoesNotExist

from projects.models import ProjectStatus
class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0035_auto_20201207_1404'),
    ]

    def update_statuses(apps, schema_editor):
        statuses = [
            ("Active", "There are things to be done in Southampton", 2, 1, 3),
            ("Closed / Terminated", "This project will not proceed any further.", 0, 0, 0),
            ("Enquiry", "A contact that may progress into something else but currently isn't anything concrete.", 1, 1, 3),
            ("Finished", "Project is completed", 0, 0, 0),
            ("Needs team discussion", "Needs to be discussed with the wider XRH team.", 1, 1, 2),
            ("On hold", "Long term wait for an update e.g. funding decision", 4, 2, 8),
            ("Waiting on collaborator", "Cannot make progress until the collaborator does something. Needs chasing if in this status for a prolonged period", 2, 1, 4),
            ("Waiting on publication", "Waiting for a publication to come from the project", 8, 2, 16),
        ]
        for status in statuses:
            try:
                status_obj = ProjectStatus.objects.get(name=status[0])
            except ObjectDoesNotExist:
                status_obj = ProjectStatus(name=status[0], description=status[1])
            status_obj.inactive_period = status[2]
            status_obj.notification_period = status[3]
            status_obj.escalation_period = status[4]
            status_obj.save()            

    operations = [
        migrations.RunPython(update_statuses)
    ]
