"""
Generated by Django 2.2.13 on 2020-06-09 15:21
    Copyright 2023 University of Southampton
    Dr Philip Basford
    Î¼-VIS X-Ray Imaging Centre

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
Useful references when writing this:
http://www.kidstrythisathome.com/2016/10/wtf-django-moving-models-part1.html
https://medium.com/@ebsaral/converting-a-model-to-multi-table-inheritance-in-django-29a576526f6
"""
from django.db import migrations, models
import django.db.models.deletion
class CopyFieldsBetweenTables(migrations.operations.base.Operation):

    reversible = False

    def __init__(self, model_from_name, model_to_name, columns):
        self.model_from_name = model_from_name
        self.model_to_name = model_to_name
        self.columns = columns

    def state_forwards(self, app_label, state):
        pass

    def database_forwards(self, app_label, schema_editor, from_state, to_state):
        columns = ", ".join(self.columns)
        base_query = """
            INSERT INTO {app_label}_{model_to}
            (id, {insert_columns})
            SELECT id, {select_columns}
            FROM {app_label}_{model_from};
            
            UPDATE {app_label}_{subobj}
              SET scan_ptr_id = id;
        """.format(
            app_label=app_label,
            model_to=self.model_to_name,
            insert_columns=columns,
            select_columns=columns,
            model_from=self.model_from_name,
            subobj=self.model_from_name,
            mainobj=self.model_to_name
        )
        
        schema_editor.execute(base_query)

    def describe(self):
        return "Copies between two tables for %s" % self.name

class Migration(migrations.Migration):

    dependencies = [
        ('muvis', '0006_auto_20191209_1743'),
        ('samples', '0074_sample_location'),
        ('scans', '0056_auto_20200609_1341'),
    ]

    operations = [
        migrations.CreateModel(
            name='Scan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scan_date', models.DateField(db_index=True)),
                ('inserted', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('operator', models.CharField(blank=True, max_length=30, null=True)),
                ('path', models.CharField(help_text='Path on the specified share to the share', max_length=255)),
                ('filename', models.CharField(db_index=True, max_length=255)),
                ('file_exists', models.BooleanField(default=True, editable=False)),
                ('moving', models.BooleanField(default=False, editable=False)),
                ('checksum', models.CharField(db_index=True, max_length=64)),
                ('muvis_bug', models.ForeignKey(blank=True, help_text='The Muvis Bug relating to the scan', null=True, on_delete=django.db.models.deletion.PROTECT, to='muvis.MuvisBug')),
                ('sample', models.ForeignKey(blank=True, help_text='The sample that this scan relates to', null=True, on_delete=django.db.models.deletion.PROTECT, to='samples.Sample')),
                ('scanner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='scans.Machine')),
                ('share', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='scans.Share')),
            ],
            options={
                'unique_together': {('share', 'path', 'filename')},
            },
        ),




        #add pointer field
        migrations.AddField(
            model_name='nikonctscan',
            name='scan_ptr',
            field=models.ForeignKey('scans.Scan', on_delete=django.db.models.deletion.CASCADE, null=True, blank=True),
        ),

        CopyFieldsBetweenTables(
            model_from_name="nikonctscan",
            model_to_name='scan',
            columns=['checksum', 'file_exists', 'filename', 'inserted', 'moving', ' muvis_bug_id', 'operator', 'path', 'sample_id', 'scan_date', 'scanner_id', 'share_id']),

        migrations.RemoveField(
            model_name='nikonctscan',
            name='checksum',
        ),
        migrations.RemoveField(
            model_name='nikonctscan',
            name='file_exists',
        ),
        migrations.RemoveField(
            model_name='nikonctscan',
            name='filename',
        ),
        migrations.RemoveField(
            model_name='nikonctscan',
            name='inserted',
        ),
        migrations.RemoveField(
            model_name='nikonctscan',
            name='moving',
        ),
        migrations.RemoveField(
            model_name='nikonctscan',
            name='muvis_bug',
        ),
        migrations.RemoveField(
            model_name='nikonctscan',
            name='operator',
        ),
        migrations.RemoveField(
            model_name='nikonctscan',
            name='path',
        ),
        migrations.RemoveField(
            model_name='nikonctscan',
            name='sample',
        ),
        migrations.RemoveField(
            model_name='nikonctscan',
            name='scan_date',
        ),
        migrations.RemoveField(
            model_name='nikonctscan',
            name='scanner',
        ),
        migrations.RemoveField(
            model_name='nikonctscan',
            name='share',
        ),


#        migrations.AlterField(
#            model_name='nikonctscan',
#            name='scan_ptr',
#            field=models.OneToOneField(
#               parent_link=True,
#               on_delete=models.deletion.PROTECT,
#               auto_created=True, primary_key=True,
#               serialize=False,
#               to='scans.Scan'),
#            preserve_default=False,
#        ),
    ]
